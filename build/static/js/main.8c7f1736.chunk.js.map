{"version":3,"sources":["components/Filter.js","components/Person.js","components/Persons.js","services/phonebook.js","components/AddContact.js","components/Notifications.js","App.js","index.js"],"names":["Filter","searchFilter","filterHandler","value","onChange","Person","person","removeHandler","name","number","onClick","Persons","persons","contactToShow","filter","p","toLowerCase","includes","trim","map","key","baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","AddContact","newName","newNumber","nameChanegeHandler","numberChangehandler","setPersons","setNewNumber","setNewName","setNotification","setNotificationType","onSubmit","event","preventDefault","newPerson","date","Date","toISOString","isFound","find","window","confirm","phoneBookServices","returnedPerson","setTimeout","catch","error","returnedContact","concat","message","type","Notification","notificationType","style","borderStyle","borderRadius","padding","marginBottom","className","App","useState","setsearchFilter","notification","useEffect","initialContants","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8c7f1736.chunk.js","sourcesContent":["import React from 'react';\n\nconst Filter = ({ searchFilter, filterHandler }) => {\n  return (\n    <div>\n      filter shown with <input value={searchFilter} onChange={filterHandler} />\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\n\nconst Person = ({ person, removeHandler }) => {\n  return (\n    <>\n      <table>\n        <tbody>\n          <tr>\n            <td>{person.name}</td>\n            <td>{person.number}</td>\n            <td>\n              <button onClick={() => removeHandler(person)}>delete</button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </>\n  );\n};\n\nexport default Person;\n","import React from 'react';\nimport Person from './Person';\n\nconst Persons = ({ persons, searchFilter, removeHandler }) => {\n  const contactToShow = !searchFilter\n    ? persons\n    : persons.filter(p =>\n        p.name.toLowerCase().includes(searchFilter.toLowerCase().trim())\n      );\n\n  return (\n    <div>\n      {contactToShow.map(person => (\n        <Person\n          key={person.name}\n          person={person}\n          removeHandler={removeHandler}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Persons;\n","import axios from 'axios';\nconst baseUrl = '/api/persons';\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then(response => response.data);\n};\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then(response => response.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then(response => response.data);\n};\n\nconst remove = id => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request.then(response => response.data);\n};\n\nexport default {\n  getAll,\n  create,\n  update,\n  remove\n};\n","import React from 'react';\nimport phoneBookServices from '../services/phonebook';\n\nconst AddContact = ({\n  persons,\n  newName,\n  newNumber,\n  nameChanegeHandler,\n  numberChangehandler,\n  setPersons,\n  setNewNumber,\n  setNewName,\n  setNotification,\n  setNotificationType\n}) => {\n  const addPerson = event => {\n    event.preventDefault();\n    const newPerson = {\n      name: newName,\n      number: newNumber,\n      date: new Date().toISOString()\n    };\n\n    const isFound = persons.find(\n      p => p.name.toLowerCase().trim() === newPerson.name.toLowerCase().trim()\n    );\n    if (isFound) {\n      const id = isFound.id;\n\n      if (\n        window.confirm(\n          `${newName} is already added to phonebook. Do you want to replace the old number with a new one?`\n        )\n      ) {\n        phoneBookServices\n          .update(id, newPerson)\n          .then(returnedPerson => {\n            setPersons(\n              persons.map(person =>\n                person.id !== id ? person : returnedPerson\n              )\n            );\n\n            setNotification(`${returnedPerson.name} number has been updated`);\n            setNotificationType('successful');\n            setTimeout(() => {\n              setNotification(null);\n            }, 5000);\n\n            setNewName('');\n            setNewNumber('');\n          })\n          .catch(error => {\n            setNotificationType('unsuccessful');\n            setNotification(\n              `${isFound.name} has already been deleted from server`\n            );\n            setTimeout(() => {\n              setNotification(null);\n            }, 5000);\n          });\n      }\n    } else {\n      phoneBookServices\n        .create(newPerson)\n        .then(returnedContact => {\n          setPersons(persons.concat(returnedContact));\n\n          setNotification(`Added ${newPerson.name} successfully`);\n          setNotificationType('successful');\n          setTimeout(() => {\n            setNotification(null);\n          }, 5000);\n        })\n        .catch(error => {\n          setNotificationType('unsuccessful');\n          setNotification(`${error.response.data.message}`);\n          setTimeout(() => {\n            setNotification(null);\n          }, 5000);\n        });\n\n      setNewName('');\n      setNewNumber('');\n    }\n  };\n  return (\n    <div>\n      <form onSubmit={addPerson}>\n        <div>\n          name: <input value={newName} onChange={nameChanegeHandler} />\n        </div>\n        <div>\n          number: <input value={newNumber} onChange={numberChangehandler} />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default AddContact;\n","import React from 'react';\n\nconst Notification = ({ message, notificationType }) => {\n  const notificationStyle = {\n    borderStyle: 'solid',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10\n  };\n\n  if (message === null) {\n    return null;\n  }\n  return (\n    <div style={notificationStyle} className={notificationType}>\n      {message}\n    </div>\n  );\n};\n\nexport default Notification;\n","import React, { useState, useEffect } from 'react';\nimport Filter from './components/Filter';\nimport Persons from './components/Persons';\nimport AddContact from './components/AddContact';\nimport Notification from './components/Notifications';\nimport phoneBookServices from './services/phonebook';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [searchFilter, setsearchFilter] = useState('');\n  const [notification, setNotification] = useState(null);\n  const [notificationType, setNotificationType] = useState('');\n\n  useEffect(() => {\n    phoneBookServices.getAll().then(initialContants => {\n      setPersons(initialContants);\n    });\n  }, []);\n\n  const handleNameChange = event => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = event => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleSearchFilter = event => {\n    setsearchFilter(event.target.value);\n  };\n\n  const handleRemovePerson = ({ id, name }) => {\n    if (window.confirm(`Delete ${name}?`)) {\n      phoneBookServices\n        .remove(id)\n        .then(() => {\n          phoneBookServices.getAll().then(returnedPerson => {\n            setPersons(returnedPerson);\n          });\n\n          setNotificationType('successful');\n          setNotification(`${name} was successfully deleted from server`);\n          setTimeout(() => {\n            setNotification(null);\n          }, 5000);\n        })\n\n        .catch(error => {\n          setNotificationType('unsuccessful');\n          setNotification(`${name} has already been removed from server`);\n          setTimeout(() => {\n            setNotification(null);\n          }, 5000);\n        });\n    }\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification\n        message={notification}\n        notificationType={notificationType}\n      />\n      <Filter filter={searchFilter} filterHandler={handleSearchFilter} />\n      <h3>Add a new</h3>\n      <AddContact\n        persons={persons}\n        setPersons={setPersons}\n        setNewName={setNewName}\n        setNewNumber={setNewNumber}\n        newName={newName}\n        newNumber={newNumber}\n        nameChanegeHandler={handleNameChange}\n        numberChangehandler={handleNumberChange}\n        setNotification={setNotification}\n        setNotificationType={setNotificationType}\n      />\n      <h3>Numbers</h3>\n      <Persons\n        persons={persons}\n        searchFilter={searchFilter}\n        removeHandler={handleRemovePerson}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}